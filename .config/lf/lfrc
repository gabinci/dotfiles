# vim:set ft=conf

# make sure trash folder exists
%mkdir -p ~/.trash

# Basic Settings
set scrolloff 10 # leave some space at the top and the bottom of the screen
set hidden true
set ignorecase true
set icons true
set shellopts '-eu'
set ifs "\n"
set shell zsh # interpreter for shell commands

# Custom funcitons
# create dir
cmd mkdir ${{
  printf "Directory Name: "
  read ans
  mkdir $ans
}}

# create file
cmd mkfile ${{
  printf "File Name: "
  read ans
  touch $ans
}}

# Archive bindings
# extract the current file with the right command
# (xkcd link: https://xkcd.com/1168/)
cmd extract ${{
    set -f
    case $f in
        *.tar.bz|*.tar.bz2|*.tbz|*.tbz2) tar xjvf $f;;
        *.tar.gz|*.tgz) tar xzvf $f;;
        *.tar.xz|*.txz) tar xJvf $f;;
        *.zip) unzip $f;;
        *.rar) unrar x $f;;
        *.7z) 7z x $f;;
    esac
}}

# compress current file or selected files with tar and gunzip
cmd tar ${{
    set -f
    mkdir $1
    cp -r $fx $1
    tar czf $1.tar.gz $1
    rm -rf $1
}}

# compress current file or selected files with zip
cmd zip ${{
    set -f
    mkdir $1
    cp -r $fx $1
    zip -r $1.zip $1
    rm -rf $1
}}

# define a custom 'open' command
# This command is called when current file is not a directory. You may want to
# use either file extensions and/or mime types here. Below uses an editor for
# text files and a file opener for the rest.
cmd open ${{
    case $(file --mime-type -Lb $f) in
        text/*) $EDITOR $fx;;
        *) for f in $fx; do setsid $OPENER $f > /dev/null 2> /dev/null & done;;
    esac
}}

# move current file or selected files to trash folder
# (also see 'man mv' for backup/overwrite options)
cmd trash %set -f; mv $fx ~/.trash

# define a custom 'rename' command without prompt for overwrite
# cmd rename %[ -e $1 ] && printf "file exists" || mv $f $1
# map r push :rename<space>

# define a custom 'delete' command
# cmd delete ${{
#     set -f
#     printf "$fx\n"
#     printf "delete?[y/n]"
#     read ans
#     [ "$ans" = "y" ] && rm -rf $fx
# }}

# Keymaps
# Remove defaults
map m
map o
map n 
map "'"
map '"'
map d

# Basic funcitons
map . set hidden!
map DD trash
map p paste
map x cut
map y copy
map <enter> open
map R reload
map mf mkfile
map md mkdir
map C clear
map o open

# Movements
# Udemy
map gujs cd ~/learning/udemy/javascript/
map gugt cd ~/learning/udemy/git/
map gubs cd ~/learning/udemy/bash/
map gurt cd ~/learning/udemy/react/
map guht cd ~/learning/udemy/html-css/

# Own
map gojs cd ~/learning/own/javascript/
map gocw cd ~/learning/own/codewars/
map gop5 cd ~/learning/own/p5/
map gocs cd ~/learning/own/css/

# books
map grs cd ~/learning/resources/

# dotfiles 
map gdf cd ~/dotfiles/
map gdc cd ~/dotfiles/.config/

